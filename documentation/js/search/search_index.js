var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.155,1,1.928]],["body/controllers/AppController.html",[0,1.886,1,3.15,2,1.532,3,0.476,4,0.411,5,0.411,6,3.364,7,0.586,8,0.036,9,1.049,10,2.739,11,3.364,12,0.476,13,0.066,14,4.065,15,2.052,16,0.029,17,0.029]],["title/modules/AppModule.html",[18,1.155,19,1.928]],["body/modules/AppModule.html",[1,2.897,2,1.513,3,0.34,4,0.293,5,0.293,7,0.632,8,0.036,9,0.749,10,2.725,11,2.402,12,0.34,13,0.047,16,0.024,17,0.024,18,1.735,19,3.714,20,1.326,21,1.326,22,1.63,23,1.63,24,1.326,25,2.585,26,1.63,27,2.402,28,2.402,29,2.402,30,2.725,31,3.029,32,2.725,33,2.255,34,1.63,35,1.63,36,2.903,37,2.868,38,2.903,39,2.903,40,1.466,41,1.826,42,2.903,43,2.903]],["title/injectables/AppService.html",[10,1.547,44,1.155]],["body/injectables/AppService.html",[3,0.458,4,0.395,5,0.395,7,0.458,8,0.036,9,1.01,10,2.469,12,0.458,13,0.063,16,0.029,17,0.029,44,1.842,45,2.196,46,3.238,47,0.828,48,2.469,49,5.587,50,1.112,51,3.913,52,1.976,53,2.026,54,1.976,55,3.913,56,2.793]],["title/controllers/AuthController.html",[0,1.155,57,1.928]],["body/controllers/AuthController.html",[0,1.451,2,1.451,3,0.451,4,0.389,5,0.389,7,0.567,8,0.036,9,0.994,12,0.451,13,0.062,15,1.944,16,0.028,17,0.028,57,3.045,58,3.187,59,2.749,60,4.006,61,2.418,62,3.187,63,3.851,64,2.162,65,2.162,66,2.749,67,2.162]],["title/modules/AuthModule.html",[18,1.155,30,1.547]],["body/modules/AuthModule.html",[2,1.611,3,0.373,4,0.321,5,0.321,7,0.605,8,0.036,9,0.821,12,0.373,13,0.052,16,0.025,17,0.025,18,1.819,20,1.452,21,1.452,22,1.785,23,1.785,24,1.452,25,2.71,26,2.71,30,2.861,32,2.158,33,2.4,34,1.785,35,1.785,37,2.271,57,3.037,61,2.736,62,2.632,68,2.632,69,2.632,70,2.632,71,3.181,72,2.689,73,3.181,74,3.181]],["title/injectables/AuthService.html",[44,1.155,61,1.399]],["body/injectables/AuthService.html",[3,0.321,4,0.277,5,0.277,7,0.452,8,0.036,9,0.707,12,0.321,13,0.044,15,1.383,16,0.023,17,0.023,44,1.454,45,1.538,47,0.58,48,1.948,50,1.269,52,1.948,53,2.341,54,1.383,61,1.761,64,2.165,65,1.538,67,1.538,72,1.724,75,2.267,76,3.783,77,4.846,78,4.465,79,2.74,80,2.538,81,2.74,82,2.165,83,1.948,84,1.096,85,1.761,86,2.74,87,3.858,88,3.695,89,2.506,90,2.74,91,2.267,92,2.74,93,2.267,94,2.74,95,2.267,96,2.74,97,1.956,98,1.251,99,2.74,100,2.74,101,2.74,102,2.74]],["title/classes/CreateUserDto.html",[13,0.05,103,1.547]],["body/classes/CreateUserDto.html",[3,0.281,4,0.242,5,0.242,7,0.534,8,0.036,12,0.281,13,0.067,16,0.021,17,0.021,47,0.507,50,1.295,53,2.099,84,1.44,85,1.601,88,4.014,91,3.43,98,1.095,103,1.77,104,0.904,105,4.014,106,1.509,107,1.453,108,3.43,109,4.144,110,1.889,111,2.398,112,2.398,113,2.398,114,4.559,115,3.506,116,3.506,117,1.968,118,2.902,119,3.506,120,3.506,121,3.506,122,2.313,123,3.506,124,2.503,125,3.506,126,3.506,127,2.398,128,2.559,129,2.398,130,2.398,131,2.398,132,2.398,133,3.506,134,3.773,135,2.902,136,2.959,137,2.398,138,2.398,139,3.506,140,1.095,141,1.509,142,1.712,143,2.868,144,2.503,145,0.904,146,2.398,147,2.398,148,2.398]],["title/classes/GetAllUsersParamDto.html",[13,0.05,149,1.72]],["body/classes/GetAllUsersParamDto.html",[3,0.354,4,0.305,5,0.305,7,0.551,8,0.036,12,0.354,13,0.076,16,0.024,17,0.024,47,0.639,50,1.173,84,1.504,85,2.308,104,1.139,107,1.711,110,1.711,124,3.901,135,3.893,140,1.38,142,2.158,144,3.358,145,1.139,149,2.318,150,3.358,151,2.502,152,3.893,153,3.893,154,4.13,155,2.949,156,4.13,157,4.13,158,3.023,159,4.13,160,3.023,161,4.704,162,2.502,163,4.13]],["title/classes/GetOneUserParamDto.html",[13,0.05,164,1.72]],["body/classes/GetOneUserParamDto.html",[3,0.422,4,0.364,5,0.364,7,0.544,8,0.036,12,0.422,13,0.075,16,0.027,17,0.027,47,0.762,50,1.024,53,2.246,84,1.024,89,2.882,104,1.358,106,2.267,107,1.923,110,1.493,122,2.119,140,1.646,143,2.92,145,1.358,150,3.313,164,2.605,165,2.573,166,4.641,167,3.604,168,3.604,169,4.641,170,2.023,171,2.573]],["title/classes/LinkYoutubeDto.html",[13,0.05,172,1.72]],["body/classes/LinkYoutubeDto.html",[3,0.418,4,0.361,5,0.361,7,0.54,8,0.036,12,0.418,13,0.075,16,0.027,17,0.027,47,0.755,50,1.014,53,1.911,84,1.014,104,1.345,107,1.911,110,1.479,136,3.293,140,1.63,143,2.901,145,1.345,165,2.548,170,2.003,172,2.589,173,2.106,174,3.816,175,2.953,176,5.592,177,4.612,178,4.612,179,3.569,180,3.569,181,3.569]],["title/classes/PatchUserDto.html",[13,0.05,182,1.72]],["body/classes/PatchUserDto.html",[3,0.479,4,0.413,5,0.413,7,0.588,8,0.036,12,0.479,13,0.066,16,0.029,17,0.029,103,2.064,104,1.54,106,2.571,145,1.54,182,2.82,183,2.918,184,4.157,185,5.024,186,3.383,187,4.088,188,2.918]],["title/classes/PatchUserPreferencesDTo.html",[13,0.05,189,1.72]],["body/classes/PatchUserPreferencesDTo.html",[3,0.476,4,0.411,5,0.411,7,0.586,8,0.036,12,0.476,13,0.066,16,0.029,17,0.029,98,2.286,104,1.532,128,2.282,141,2.557,145,1.532,183,2.902,184,4.143,186,3.364,189,2.81,190,2.902,191,5.007]],["title/classes/SelectChannelDto.html",[13,0.05,192,1.72]],["body/classes/SelectChannelDto.html",[3,0.266,4,0.23,5,0.23,7,0.47,8,0.035,12,0.266,13,0.055,16,0.02,17,0.02,40,2.243,47,0.48,50,1.141,53,1.84,56,1.622,83,1.701,84,1.141,104,0.856,107,1.396,110,1.664,117,1.891,122,1.538,134,3.323,136,2.867,140,1.037,143,2.794,145,0.856,155,2.405,165,2.867,170,2.254,171,2.405,173,2.028,192,1.891,193,3.675,194,1.88,195,4.015,196,4.015,197,4.166,198,3.369,199,4.441,200,3.675,201,4.112,202,3.369,203,2.405,204,4.112,205,2.272,206,2.272,207,3.369,208,3.369,209,2.272,210,2.272,211,3.369,212,3.369,213,3.369,214,3.369,215,4.112,216,3.369,217,2.272,218,3.369,219,2.272,220,1.88,221,2.272,222,2.272,223,2.272,224,2.272]],["title/controllers/SocialAccountsController.html",[0,1.155,225,1.928]],["body/controllers/SocialAccountsController.html",[0,0.768,2,0.768,3,0.239,4,0.206,5,0.206,7,0.492,8,0.036,9,0.526,12,0.239,13,0.033,15,1.029,16,0.018,17,0.018,40,1.029,41,2.847,47,0.431,48,1.567,50,1.195,52,2.123,53,1.558,54,2.123,59,1.455,64,1.144,65,1.144,67,1.144,82,2.36,83,2.123,84,1.195,85,1.92,89,2.111,98,0.93,110,1.742,172,2.677,173,2.067,192,2.869,225,1.953,226,1.686,227,2.569,228,3.104,229,3.405,230,2.569,231,2.569,232,2.569,233,2.038,234,5.342,235,3.104,236,2.038,237,5.237,238,1.686,239,3.104,240,2.038,241,2.216,242,1.686,243,2.569,244,2.038,245,2.038,246,3.104,247,2.038,248,2.216,249,1.455,250,1.686,251,1.686,252,1.686,253,1.686,254,1.686,255,1.686,256,2.123,257,1.686,258,1.686,259,2.038,260,2.038,261,2.038,262,2.038,263,2.038,264,2.038,265,2.038,266,2.038,267,2.038,268,2.038,269,2.038,270,2.038,271,2.038]],["title/modules/SocialAccountsModule.html",[18,1.155,31,1.72]],["body/modules/SocialAccountsModule.html",[2,1.7,3,0.404,4,0.349,5,0.349,7,0.589,8,0.035,9,0.891,12,0.404,13,0.056,16,0.026,17,0.026,18,1.894,20,1.576,21,1.576,22,1.937,23,1.937,24,1.576,25,2.822,26,1.937,31,3.186,33,2.533,34,1.937,35,1.937,40,1.743,41,2.171,173,1.576,225,3.163,256,2.866,257,2.856,258,2.856,272,2.856,273,2.856,274,3.451,275,3.451]],["title/injectables/SocialAccountsService.html",[44,1.155,256,1.547]],["body/injectables/SocialAccountsService.html",[3,0.264,4,0.228,5,0.228,7,0.469,8,0.036,9,0.583,12,0.264,13,0.037,16,0.02,17,0.02,40,1.14,44,1.264,45,1.267,47,0.478,48,1.693,50,1.258,52,2.236,53,2.333,54,2.236,66,2.394,82,2.486,83,2.236,84,1.258,85,2.022,89,2.246,117,1.882,172,2.783,173,2.16,192,2.96,201,1.868,227,1.868,229,4.02,230,2.775,231,2.775,232,2.775,238,2.775,241,3.161,242,2.775,252,1.868,253,1.868,254,1.868,255,1.868,256,1.693,276,3.915,277,1.868,278,3.353,279,3.353,280,2.258,281,4.731,282,2.258,283,2.258,284,3.353,285,2.258,286,2.258,287,2.258,288,1.612,289,3.353,290,2.258,291,2.258]],["title/classes/UserPreferencesDto.html",[13,0.05,128,1.72]],["body/classes/UserPreferencesDto.html",[3,0.291,4,0.251,5,0.251,7,0.496,8,0.036,12,0.291,13,0.058,16,0.021,17,0.021,47,0.526,50,1.203,84,1.203,97,2.571,104,0.938,107,1.492,110,1.754,117,2.021,122,1.644,124,3.312,128,2.021,140,1.136,144,3.312,145,0.938,162,2.059,170,2.88,190,1.776,204,3.839,215,2.059,220,2.059,249,2.571,292,3.839,293,4.232,294,4.232,295,4.641,296,3.601,297,3.601,298,3.601,299,3.601,300,2.488,301,2.488,302,3.601,303,3.601,304,3.601,305,2.488,306,2.488,307,2.488,308,2.488,309,3.601,310,3.601,311,3.601,312,2.488,313,2.98,314,2.98,315,2.98,316,2.488,317,3.601,318,2.488,319,3.601,320,2.488,321,2.488,322,2.488,323,2.488,324,2.059,325,2.488,326,2.488,327,2.488]],["title/controllers/UsersController.html",[0,1.155,328,1.928]],["body/controllers/UsersController.html",[0,0.664,2,0.664,3,0.206,4,0.178,5,0.178,7,0.551,8,0.037,9,0.455,12,0.206,13,0.029,15,0.89,16,0.016,17,0.016,47,0.373,48,1.401,50,1.277,52,2.27,54,2.27,59,1.258,64,0.989,65,0.989,67,0.989,76,4.046,80,1.777,82,2.523,83,2.27,84,1.277,85,2.053,98,0.805,103,2.27,110,1.863,122,0.805,141,1.109,149,2.523,164,3.13,182,2.735,188,2.45,189,2.523,243,2.296,248,2.45,249,2.45,250,1.459,251,2.296,328,1.745,329,1.459,330,1.763,331,2.775,332,2.296,333,2.296,334,2.296,335,2.839,336,2.839,337,1.763,338,1.763,339,1.459,340,1.763,341,1.459,342,1.763,343,1.459,344,2.775,345,1.763,346,1.459,347,2.775,348,1.763,349,1.459,350,2.775,351,1.763,352,1.763,353,1.763,354,1.459,355,2.296,356,1.459,357,2.296,358,1.459,359,1.763,360,1.763,361,1.763,362,1.763,363,1.763,364,1.763,365,1.763,366,1.763,367,1.763,368,1.763,369,1.763,370,1.763]],["title/modules/UsersModule.html",[18,1.155,32,1.547]],["body/modules/UsersModule.html",[2,1.611,3,0.373,4,0.321,5,0.321,7,0.605,8,0.036,9,0.821,12,0.373,13,0.052,16,0.025,17,0.025,18,1.819,20,1.452,21,1.452,22,1.785,23,1.785,24,1.452,25,2.71,26,2.71,30,2.158,32,2.861,33,2.4,34,1.785,35,1.785,37,2.271,72,2.689,80,2.736,328,3.037,358,2.632,371,2.632,372,2.632,373,2.632,374,3.181,375,3.181,376,3.181]],["title/injectables/UsersService.html",[44,1.155,80,1.399]],["body/injectables/UsersService.html",[3,0.187,4,0.162,5,0.162,7,0.53,8,0.037,9,0.413,12,0.187,13,0.026,15,0.808,16,0.015,17,0.015,44,0.968,45,0.898,47,0.339,48,1.298,50,1.287,52,2.176,54,2.176,60,1.324,61,2.068,64,1.442,65,0.898,66,1.143,67,0.898,72,1.007,76,3.974,80,1.173,82,2.542,83,2.287,84,1.287,85,2.068,89,1.807,93,1.324,95,1.324,98,1.843,103,2.176,108,1.324,117,1.807,122,0.731,141,1.007,149,2.419,152,2.127,153,2.127,164,3,182,2.643,188,2.299,189,2.419,229,3.974,241,3.077,248,1.143,332,2.127,333,2.127,334,2.127,335,2.127,336,2.127,339,2.127,341,2.127,343,2.127,346,2.127,349,2.127,354,1.324,355,2.127,356,1.324,357,2.127,377,1.324,378,2.57,379,1.6,380,1.6,381,2.57,382,1.6,383,1.6,384,1.6,385,1.6,386,1.6,387,1.6,388,1.6,389,1.6,390,2.57,391,2.57,392,2.57,393,2.57,394,2.57,395,1.6]],["title/coverage.html",[396,3.45]],["body/coverage.html",[0,1.79,1,1.649,5,0.265,6,2.17,8,0.035,10,1.324,13,0.089,16,0.022,17,0.022,24,1.197,41,1.649,44,1.79,46,2.17,57,1.649,58,2.17,61,1.197,75,2.17,80,1.197,84,0.745,98,1.197,103,1.324,105,2.17,106,2.742,122,1.197,128,1.472,149,1.472,150,2.67,151,2.17,164,1.472,171,1.872,172,1.472,173,2.17,174,2.17,175,2.17,182,1.472,183,2.67,189,1.472,190,2.67,192,1.472,193,2.17,194,2.17,225,1.649,226,2.17,256,1.324,276,2.17,277,2.17,292,2.17,328,1.649,329,2.17,377,2.17,396,2.17,397,2.622,398,2.622,399,5.993,400,5.024,401,4.358,402,4.358,403,2.17,404,2.622,405,4.358,406,2.622,407,2.622,408,2.622,409,2.622,410,2.622,411,2.622]],["title/dependencies.html",[21,1.681,412,2.123]],["body/dependencies.html",[8,0.036,9,1.027,13,0.08,16,0.029,17,0.029,21,1.816,140,1.816,142,2.839,145,1.498,413,3.977,414,3.977,415,5.372,416,3.977,417,3.977,418,3.977,419,3.977,420,3.977,421,3.977,422,3.977,423,3.977,424,3.977,425,3.977,426,3.977]],["title/miscellaneous/enumerations.html",[427,1.614,428,3.047]],["body/miscellaneous/enumerations.html",[8,0.036,16,0.026,17,0.026,47,0.713,155,4.316,173,2.029,197,3.173,203,3.173,288,3.173,295,3.677,313,3.677,314,3.677,315,3.677,427,2.121,428,2.79,429,3.372,430,3.372,431,3.372,432,3.372,433,4.444,434,4.444,435,4.444,436,4.444,437,4.444,438,4.444,439,3.372,440,3.677,441,4.444,442,3.372]],["title/miscellaneous/functions.html",[427,1.614,443,3.047]],["body/miscellaneous/functions.html",[8,0.032,16,0.032,17,0.032,24,2.606,47,0.967,403,3.785,427,2.877,443,3.785,444,4.573]],["title/index.html",[47,0.543,445,2.566,446,2.566]],["body/index.html",[4,0.276,8,0.023,16,0.023,17,0.023,40,1.378,56,1.949,97,1.949,197,1.949,200,2.259,203,1.949,288,1.949,324,4.221,440,2.259,447,2.73,448,2.73,449,5.101,450,2.73,451,2.73,452,2.73,453,3.848,454,2.73,455,2.73,456,3.848,457,4.456,458,4.456,459,2.73,460,2.73,461,2.73,462,2.73,463,2.73,464,2.73,465,2.73,466,2.73,467,2.73,468,2.73,469,2.73,470,2.73,471,2.73,472,2.73,473,2.73,474,2.73,475,4.456,476,5.101,477,2.73,478,2.73,479,2.73,480,2.73,481,2.73,482,2.73,483,2.73,484,2.73,485,2.73,486,2.73,487,2.73,488,2.73,489,2.73,490,2.73,491,3.848,492,2.73,493,2.73,494,2.73,495,3.848,496,2.73,497,2.73,498,2.73,499,3.848,500,2.73,501,2.73,502,2.73,503,2.73,504,2.73,505,2.73,506,2.73,507,2.73,508,2.73,509,2.73,510,2.73,511,2.73,512,2.73,513,3.848,514,2.73,515,2.73,516,2.73,517,2.73,518,2.73,519,2.73,520,2.73,521,2.73,522,2.73,523,2.73,524,2.73,525,2.73,526,2.73,527,2.73,528,2.73]],["title/modules.html",[20,1.903]],["body/modules.html",[8,0.03,16,0.03,17,0.03,19,2.661,20,1.931,30,2.136,31,2.374,32,2.136,529,5.74,530,5.74,531,5.74,532,5.74]],["title/overview.html",[533,3.45]],["body/overview.html",[2,1.153,8,0.035,10,2.391,16,0.024,17,0.024,18,1.153,19,3.683,20,1.398,21,1.398,22,1.718,23,1.718,24,1.398,25,1.718,26,1.718,27,2.533,28,2.533,29,2.533,30,2.769,31,2.984,32,2.769,33,2.338,34,1.718,35,1.718,45,1.718,61,2.562,68,2.533,69,2.533,70,2.533,80,2.562,104,1.153,118,2.533,256,2.391,272,2.533,273,2.533,371,2.533,372,2.533,373,2.533,533,2.533,534,4.735]],["title/properties.html",[107,1.526,412,2.123]],["body/properties.html",[8,0.036,16,0.031,17,0.031,107,1.86,170,2.52,535,4.489,536,4.489,537,4.489,538,4.489,539,4.489]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/GetAllUsersParamDto.html":{},"classes/GetOneUserParamDto.html":{},"classes/LinkYoutubeDto.html":{},"classes/PatchUserDto.html":{},"classes/PatchUserPreferencesDTo.html":{},"classes/SelectChannelDto.html":{},"controllers/SocialAccountsController.html":{},"modules/SocialAccountsModule.html":{},"injectables/SocialAccountsService.html":{},"classes/UserPreferencesDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":399,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":536,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":400,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":401,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":406,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":402,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":407,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":159,"title":{},"body":{"classes/GetAllUsersParamDto.html":{}}}],["1.1.26",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["11.2.0",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":156,"title":{},"body":{"classes/GetAllUsersParamDto.html":{}}}],["3",{"_index":302,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["4",{"_index":534,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":118,"title":{},"body":{"classes/CreateUserDto.html":{},"overview.html":{}}}],["account",{"_index":289,"title":{},"body":{"injectables/SocialAccountsService.html":{}}}],["accounts",{"_index":227,"title":{},"body":{"controllers/SocialAccountsController.html":{},"injectables/SocialAccountsService.html":{}}}],["accounts.controller",{"_index":275,"title":{},"body":{"modules/SocialAccountsModule.html":{}}}],["accounts.controller.ts",{"_index":226,"title":{},"body":{"controllers/SocialAccountsController.html":{},"coverage.html":{}}}],["accounts.controller.ts:16",{"_index":236,"title":{},"body":{"controllers/SocialAccountsController.html":{}}}],["accounts.controller.ts:24",{"_index":240,"title":{},"body":{"controllers/SocialAccountsController.html":{}}}],["accounts.controller.ts:29",{"_index":247,"title":{},"body":{"controllers/SocialAccountsController.html":{}}}],["accounts.controller.ts:34",{"_index":244,"title":{},"body":{"controllers/SocialAccountsController.html":{}}}],["accounts.module",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["accounts.module.ts",{"_index":274,"title":{},"body":{"modules/SocialAccountsModule.html":{}}}],["accounts.service",{"_index":258,"title":{},"body":{"controllers/SocialAccountsController.html":{},"modules/SocialAccountsModule.html":{}}}],["accounts.service.ts",{"_index":277,"title":{},"body":{"injectables/SocialAccountsService.html":{},"coverage.html":{}}}],["accounts.service.ts:12",{"_index":282,"title":{},"body":{"injectables/SocialAccountsService.html":{}}}],["accounts.service.ts:19",{"_index":285,"title":{},"body":{"injectables/SocialAccountsService.html":{}}}],["accounts.service.ts:26",{"_index":283,"title":{},"body":{"injectables/SocialAccountsService.html":{}}}],["accounts.service.ts:8",{"_index":280,"title":{},"body":{"injectables/SocialAccountsService.html":{}}}],["accounts/dtos/link",{"_index":174,"title":{},"body":{"classes/LinkYoutubeDto.html":{},"coverage.html":{}}}],["accounts/dtos/select",{"_index":193,"title":{},"body":{"classes/SelectChannelDto.html":{},"coverage.html":{}}}],["accounts/enums/niche.enums.ts",{"_index":432,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["accounts/enums/plateform.enums.ts",{"_index":439,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["accounts/providers/social",{"_index":276,"title":{},"body":{"injectables/SocialAccountsService.html":{},"coverage.html":{}}}],["accounts/social",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"controllers/SocialAccountsController.html":{},"modules/SocialAccountsModule.html":{},"coverage.html":{}}}],["apiproperty",{"_index":143,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetOneUserParamDto.html":{},"classes/LinkYoutubeDto.html":{},"classes/SelectChannelDto.html":{}}}],["apiproperty()@isemail()@isnotempty",{"_index":111,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isstring()@minlength(3)@isnotempty",{"_index":131,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isstring()@minlength(8)@isnotempty()@matches(/^(?=.*[a",{"_index":113,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty({description",{"_index":165,"title":{},"body":{"classes/GetOneUserParamDto.html":{},"classes/LinkYoutubeDto.html":{},"classes/SelectChannelDto.html":{}}}],["apipropertyoptional",{"_index":144,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetAllUsersParamDto.html":{},"classes/UserPreferencesDto.html":{}}}],["apipropertyoptional()@isoptional()@type(undefined)@isint()@min(1",{"_index":157,"title":{},"body":{"classes/GetAllUsersParamDto.html":{}}}],["apipropertyoptional()@isoptional()@validatenested()@type(undefined",{"_index":129,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apipropertyoptional({enum",{"_index":307,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["apipropertyoptional({example",{"_index":297,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["app.controller",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":19,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":10,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":229,"title":{},"body":{"controllers/SocialAccountsController.html":{},"injectables/SocialAccountsService.html":{},"injectables/UsersService.html":{}}}],["attention",{"_index":527,"title":{},"body":{"index.html":{}}}],["audience",{"_index":453,"title":{},"body":{"index.html":{}}}],["audiences",{"_index":519,"title":{},"body":{"index.html":{}}}],["auth",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["auth.controller",{"_index":73,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":57,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":261,"title":{},"body":{"controllers/SocialAccountsController.html":{}}}],["authenticateduserid",{"_index":271,"title":{},"body":{"controllers/SocialAccountsController.html":{}}}],["authmodule",{"_index":30,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":539,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":61,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":299,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["automatically",{"_index":482,"title":{},"body":{"index.html":{}}}],["autopost",{"_index":293,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["becomes",{"_index":522,"title":{},"body":{"index.html":{}}}],["belongs",{"_index":212,"title":{},"body":{"classes/SelectChannelDto.html":{}}}],["beyond",{"_index":493,"title":{},"body":{"index.html":{}}}],["body",{"_index":248,"title":{},"body":{"controllers/SocialAccountsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["boolean",{"_index":296,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["bootstrap",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SocialAccountsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["brand",{"_index":513,"title":{},"body":{"index.html":{}}}],["brands",{"_index":470,"title":{},"body":{"index.html":{}}}],["browse",{"_index":532,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":529,"title":{},"body":{"modules.html":{}}}],["built",{"_index":477,"title":{},"body":{"index.html":{}}}],["business",{"_index":505,"title":{},"body":{"index.html":{}}}],["businesses",{"_index":467,"title":{},"body":{"index.html":{}}}],["category",{"_index":211,"title":{},"body":{"classes/SelectChannelDto.html":{}}}],["ceateuser",{"_index":378,"title":{},"body":{"injectables/UsersService.html":{}}}],["ceateuser(createuserdto",{"_index":381,"title":{},"body":{"injectables/UsersService.html":{}}}],["channel",{"_index":201,"title":{},"body":{"classes/SelectChannelDto.html":{},"injectables/SocialAccountsService.html":{}}}],["channel.dto",{"_index":255,"title":{},"body":{"controllers/SocialAccountsController.html":{},"injectables/SocialAccountsService.html":{}}}],["channel.dto.ts",{"_index":194,"title":{},"body":{"classes/SelectChannelDto.html":{},"coverage.html":{}}}],["channel.dto.ts:12",{"_index":206,"title":{},"body":{"classes/SelectChannelDto.html":{}}}],["channel.dto.ts:20",{"_index":210,"title":{},"body":{"classes/SelectChannelDto.html":{}}}],["channel.dto.ts:28",{"_index":219,"title":{},"body":{"classes/SelectChannelDto.html":{}}}],["channelid",{"_index":195,"title":{},"body":{"classes/SelectChannelDto.html":{}}}],["channelname",{"_index":196,"title":{},"body":{"classes/SelectChannelDto.html":{}}}],["channels",{"_index":488,"title":{},"body":{"index.html":{}}}],["character",{"_index":126,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["characters",{"_index":119,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["check",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":13,"title":{"classes/CreateUserDto.html":{},"classes/GetAllUsersParamDto.html":{},"classes/GetOneUserParamDto.html":{},"classes/LinkYoutubeDto.html":{},"classes/PatchUserDto.html":{},"classes/PatchUserPreferencesDTo.html":{},"classes/SelectChannelDto.html":{},"classes/UserPreferencesDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/GetAllUsersParamDto.html":{},"classes/GetOneUserParamDto.html":{},"classes/LinkYoutubeDto.html":{},"classes/PatchUserDto.html":{},"classes/PatchUserPreferencesDTo.html":{},"classes/SelectChannelDto.html":{},"controllers/SocialAccountsController.html":{},"modules/SocialAccountsModule.html":{},"injectables/SocialAccountsService.html":{},"classes/UserPreferencesDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":104,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetAllUsersParamDto.html":{},"classes/GetOneUserParamDto.html":{},"classes/LinkYoutubeDto.html":{},"classes/PatchUserDto.html":{},"classes/PatchUserPreferencesDTo.html":{},"classes/SelectChannelDto.html":{},"classes/UserPreferencesDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":68,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":69,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":70,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_socialaccountsmodule",{"_index":272,"title":{},"body":{"modules/SocialAccountsModule.html":{},"overview.html":{}}}],["cluster_socialaccountsmodule_providers",{"_index":273,"title":{},"body":{"modules/SocialAccountsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":371,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":373,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":372,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":176,"title":{},"body":{"classes/LinkYoutubeDto.html":{}}}],["compodoc/compodoc",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["connecting",{"_index":525,"title":{},"body":{"index.html":{}}}],["consistent",{"_index":456,"title":{},"body":{"index.html":{}}}],["console.log(true",{"_index":102,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":390,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/SocialAccountsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":379,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["constructor(usersservice",{"_index":79,"title":{},"body":{"injectables/AuthService.html":{}}}],["contain",{"_index":121,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["content",{"_index":324,"title":{},"body":{"classes/UserPreferencesDto.html":{},"index.html":{}}}],["content'})@isboolean",{"_index":300,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/SocialAccountsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/SocialAccountsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('social",{"_index":259,"title":{},"body":{"controllers/SocialAccountsController.html":{}}}],["controller('users",{"_index":359,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/SocialAccountsController.html":{},"modules/SocialAccountsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":396,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":187,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["createuser",{"_index":331,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(@body",{"_index":365,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(createuserdto",{"_index":337,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuserdto",{"_index":103,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["creating",{"_index":455,"title":{},"body":{"index.html":{}}}],["creator",{"_index":503,"title":{},"body":{"index.html":{}}}],["creators",{"_index":465,"title":{},"body":{"index.html":{}}}],["cross",{"_index":480,"title":{},"body":{"index.html":{}}}],["curate",{"_index":510,"title":{},"body":{"index.html":{}}}],["curates",{"_index":484,"title":{},"body":{"index.html":{}}}],["database",{"_index":100,"title":{},"body":{"injectables/AuthService.html":{}}}],["day",{"_index":321,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["day'})@isnumber()@min(0)@max(3",{"_index":305,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["declarations",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SocialAccountsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":110,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetAllUsersParamDto.html":{},"classes/GetOneUserParamDto.html":{},"classes/LinkYoutubeDto.html":{},"classes/SelectChannelDto.html":{},"controllers/SocialAccountsController.html":{},"classes/UserPreferencesDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":154,"title":{},"body":{"classes/GetAllUsersParamDto.html":{}}}],["defined",{"_index":50,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/GetAllUsersParamDto.html":{},"classes/GetOneUserParamDto.html":{},"classes/LinkYoutubeDto.html":{},"classes/SelectChannelDto.html":{},"controllers/SocialAccountsController.html":{},"injectables/SocialAccountsService.html":{},"classes/UserPreferencesDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":250,"title":{},"body":{"controllers/SocialAccountsController.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":243,"title":{},"body":{"controllers/SocialAccountsController.html":{},"controllers/UsersController.html":{}}}],["deleted",{"_index":395,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteuser",{"_index":332,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteuser(@param",{"_index":369,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser(getoneuserparamdto",{"_index":339,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deliver",{"_index":496,"title":{},"body":{"index.html":{}}}],["demand",{"_index":474,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":21,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SocialAccountsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":360,"title":{},"body":{"controllers/UsersController.html":{}}}],["description",{"_index":170,"title":{},"body":{"classes/GetOneUserParamDto.html":{},"classes/LinkYoutubeDto.html":{},"classes/SelectChannelDto.html":{},"classes/UserPreferencesDto.html":{},"properties.html":{}}}],["digital",{"_index":448,"title":{},"body":{"index.html":{}}}],["discover",{"_index":508,"title":{},"body":{"index.html":{}}}],["display",{"_index":207,"title":{},"body":{"classes/SelectChannelDto.html":{}}}],["documentation",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["dtos/create",{"_index":354,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/get",{"_index":355,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/link",{"_index":252,"title":{},"body":{"controllers/SocialAccountsController.html":{},"injectables/SocialAccountsService.html":{}}}],["dtos/patch",{"_index":357,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/select",{"_index":254,"title":{},"body":{"controllers/SocialAccountsController.html":{},"injectables/SocialAccountsService.html":{}}}],["education",{"_index":438,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["effortless",{"_index":495,"title":{},"body":{"index.html":{}}}],["email",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{}}}],["engaging",{"_index":475,"title":{},"body":{"index.html":{}}}],["entrepreneur",{"_index":504,"title":{},"body":{"index.html":{}}}],["enum",{"_index":215,"title":{},"body":{"classes/SelectChannelDto.html":{},"classes/UserPreferencesDto.html":{}}}],["enumerations",{"_index":428,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/niche.enums",{"_index":221,"title":{},"body":{"classes/SelectChannelDto.html":{}}}],["enums/replytone.enums",{"_index":320,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["established",{"_index":469,"title":{},"body":{"index.html":{}}}],["even",{"_index":468,"title":{},"body":{"index.html":{}}}],["everyone",{"_index":463,"title":{},"body":{"index.html":{}}}],["example",{"_index":204,"title":{},"body":{"classes/SelectChannelDto.html":{},"classes/UserPreferencesDto.html":{}}}],["exist",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{}}}],["expanding",{"_index":490,"title":{},"body":{"index.html":{}}}],["export",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/GetAllUsersParamDto.html":{},"classes/GetOneUserParamDto.html":{},"classes/LinkYoutubeDto.html":{},"classes/PatchUserDto.html":{},"classes/PatchUserPreferencesDTo.html":{},"classes/SelectChannelDto.html":{},"controllers/SocialAccountsController.html":{},"modules/SocialAccountsModule.html":{},"injectables/SocialAccountsService.html":{},"classes/UserPreferencesDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SocialAccountsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":184,"title":{},"body":{"classes/PatchUserDto.html":{},"classes/PatchUserPreferencesDTo.html":{}}}],["facebook",{"_index":440,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/GetAllUsersParamDto.html":{},"classes/GetOneUserParamDto.html":{},"classes/LinkYoutubeDto.html":{},"classes/PatchUserDto.html":{},"classes/PatchUserPreferencesDTo.html":{},"classes/SelectChannelDto.html":{},"controllers/SocialAccountsController.html":{},"modules/SocialAccountsModule.html":{},"injectables/SocialAccountsService.html":{},"classes/UserPreferencesDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findallusers",{"_index":333,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findallusers(@query",{"_index":361,"title":{},"body":{"controllers/UsersController.html":{}}}],["findallusers(getallusersparamdto",{"_index":341,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findoneuser",{"_index":334,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findoneuser(@param",{"_index":363,"title":{},"body":{"controllers/UsersController.html":{}}}],["findoneuser(getoneuserparamdto",{"_index":343,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["fits",{"_index":512,"title":{},"body":{"index.html":{}}}],["focus",{"_index":523,"title":{},"body":{"index.html":{}}}],["form",{"_index":262,"title":{},"body":{"controllers/SocialAccountsController.html":{}}}],["forwardref",{"_index":72,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["frequencyofupload",{"_index":294,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["function",{"_index":404,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":443,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gaming",{"_index":437,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["generate",{"_index":511,"title":{},"body":{"index.html":{}}}],["generated",{"_index":311,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["generates",{"_index":485,"title":{},"body":{"index.html":{}}}],["get(':id",{"_index":344,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('my",{"_index":235,"title":{},"body":{"controllers/SocialAccountsController.html":{}}}],["getaccounts",{"_index":278,"title":{},"body":{"injectables/SocialAccountsService.html":{}}}],["getaccounts(userid",{"_index":279,"title":{},"body":{"injectables/SocialAccountsService.html":{}}}],["getallusersparamdto",{"_index":149,"title":{"classes/GetAllUsersParamDto.html":{}},"body":{"classes/GetAllUsersParamDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["gethello",{"_index":49,"title":{},"body":{"injectables/AppService.html":{}}}],["getmyaccounts",{"_index":228,"title":{},"body":{"controllers/SocialAccountsController.html":{}}}],["getmyaccounts(@req",{"_index":260,"title":{},"body":{"controllers/SocialAccountsController.html":{}}}],["getmyaccounts(req",{"_index":233,"title":{},"body":{"controllers/SocialAccountsController.html":{}}}],["getoneuserparamdto",{"_index":164,"title":{"classes/GetOneUserParamDto.html":{}},"body":{"classes/GetOneUserParamDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["getoneuserparamdto.id",{"_index":391,"title":{},"body":{"injectables/UsersService.html":{}}}],["getting",{"_index":445,"title":{"index.html":{}},"body":{}}],["google",{"_index":181,"title":{},"body":{"classes/LinkYoutubeDto.html":{}}}],["google'})@isstring",{"_index":179,"title":{},"body":{"classes/LinkYoutubeDto.html":{}}}],["grow",{"_index":452,"title":{},"body":{"index.html":{}}}],["growing",{"_index":524,"title":{},"body":{"index.html":{}}}],["hello",{"_index":55,"title":{},"body":{"injectables/AppService.html":{}}}],["helps",{"_index":507,"title":{},"body":{"index.html":{}}}],["high",{"_index":457,"title":{},"body":{"index.html":{}}}],["humorous",{"_index":315,"title":{},"body":{"classes/UserPreferencesDto.html":{},"miscellaneous/enumerations.html":{}}}],["id",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetOneUserParamDto.html":{},"controllers/SocialAccountsController.html":{},"injectables/SocialAccountsService.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":171,"title":{},"body":{"classes/GetOneUserParamDto.html":{},"classes/SelectChannelDto.html":{},"coverage.html":{}}}],["identifier'})@isuuid",{"_index":167,"title":{},"body":{"classes/GetOneUserParamDto.html":{}}}],["impact",{"_index":528,"title":{},"body":{"index.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/GetAllUsersParamDto.html":{},"classes/GetOneUserParamDto.html":{},"classes/LinkYoutubeDto.html":{},"classes/PatchUserDto.html":{},"classes/PatchUserPreferencesDTo.html":{},"classes/SelectChannelDto.html":{},"controllers/SocialAccountsController.html":{},"modules/SocialAccountsModule.html":{},"injectables/SocialAccountsService.html":{},"classes/UserPreferencesDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":47,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/GetAllUsersParamDto.html":{},"classes/GetOneUserParamDto.html":{},"classes/LinkYoutubeDto.html":{},"classes/SelectChannelDto.html":{},"controllers/SocialAccountsController.html":{},"injectables/SocialAccountsService.html":{},"classes/UserPreferencesDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/GetAllUsersParamDto.html":{},"classes/GetOneUserParamDto.html":{},"classes/LinkYoutubeDto.html":{},"classes/PatchUserDto.html":{},"classes/PatchUserPreferencesDTo.html":{},"classes/SelectChannelDto.html":{},"controllers/SocialAccountsController.html":{},"modules/SocialAccountsModule.html":{},"injectables/SocialAccountsService.html":{},"classes/UserPreferencesDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["inject(forwardref",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":44,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/SocialAccountsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/SocialAccountsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":45,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/SocialAccountsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injecting",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/SocialAccountsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["instagram",{"_index":492,"title":{},"body":{"index.html":{}}}],["isauth",{"_index":77,"title":{},"body":{"injectables/AuthService.html":{}}}],["isboolean",{"_index":319,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["isemail",{"_index":133,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum",{"_index":220,"title":{},"body":{"classes/SelectChannelDto.html":{},"classes/UserPreferencesDto.html":{}}}],["isenum(niche",{"_index":224,"title":{},"body":{"classes/SelectChannelDto.html":{}}}],["isenum(replytone",{"_index":327,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["isint",{"_index":161,"title":{},"body":{"classes/GetAllUsersParamDto.html":{}}}],["isnotempty",{"_index":134,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SelectChannelDto.html":{}}}],["isnumber",{"_index":317,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["isoptional",{"_index":135,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetAllUsersParamDto.html":{}}}],["isstring",{"_index":136,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LinkYoutubeDto.html":{},"classes/SelectChannelDto.html":{}}}],["isuuid",{"_index":169,"title":{},"body":{"classes/GetOneUserParamDto.html":{}}}],["keep",{"_index":472,"title":{},"body":{"index.html":{}}}],["legend",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SocialAccountsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["letter",{"_index":123,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["license",{"_index":537,"title":{},"body":{"properties.html":{}}}],["lifestyle",{"_index":436,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["limit",{"_index":152,"title":{},"body":{"classes/GetAllUsersParamDto.html":{},"injectables/UsersService.html":{}}}],["link",{"_index":287,"title":{},"body":{"injectables/SocialAccountsService.html":{}}}],["linkyoutube",{"_index":230,"title":{},"body":{"controllers/SocialAccountsController.html":{},"injectables/SocialAccountsService.html":{}}}],["linkyoutube(@body",{"_index":265,"title":{},"body":{"controllers/SocialAccountsController.html":{}}}],["linkyoutube(linkyoutubedto",{"_index":238,"title":{},"body":{"controllers/SocialAccountsController.html":{},"injectables/SocialAccountsService.html":{}}}],["linkyoutubedto",{"_index":172,"title":{"classes/LinkYoutubeDto.html":{}},"body":{"classes/LinkYoutubeDto.html":{},"controllers/SocialAccountsController.html":{},"injectables/SocialAccountsService.html":{},"coverage.html":{}}}],["login",{"_index":78,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(email",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":120,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maintain",{"_index":514,"title":{},"body":{"index.html":{}}}],["major",{"_index":487,"title":{},"body":{"index.html":{}}}],["makes",{"_index":494,"title":{},"body":{"index.html":{}}}],["many",{"_index":464,"title":{},"body":{"index.html":{}}}],["match",{"_index":213,"title":{},"body":{"classes/SelectChannelDto.html":{}}}],["matches",{"_index":137,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/^(?=.*[a",{"_index":148,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/GetAllUsersParamDto.html":{},"classes/GetOneUserParamDto.html":{},"classes/LinkYoutubeDto.html":{},"classes/PatchUserDto.html":{},"classes/PatchUserPreferencesDTo.html":{},"classes/SelectChannelDto.html":{},"controllers/SocialAccountsController.html":{},"modules/SocialAccountsModule.html":{},"injectables/SocialAccountsService.html":{},"classes/UserPreferencesDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["material",{"_index":509,"title":{},"body":{"index.html":{}}}],["max",{"_index":318,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["max(3",{"_index":323,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["media",{"_index":200,"title":{},"body":{"classes/SelectChannelDto.html":{},"index.html":{}}}],["message",{"_index":117,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SelectChannelDto.html":{},"injectables/SocialAccountsService.html":{},"classes/UserPreferencesDto.html":{},"injectables/UsersService.html":{}}}],["metadata",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":48,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/SocialAccountsController.html":{},"injectables/SocialAccountsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["min",{"_index":162,"title":{},"body":{"classes/GetAllUsersParamDto.html":{},"classes/UserPreferencesDto.html":{}}}],["min(0",{"_index":322,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["min(1",{"_index":163,"title":{},"body":{"classes/GetAllUsersParamDto.html":{}}}],["minlength",{"_index":138,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(3",{"_index":146,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(8",{"_index":147,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":427,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["module",{"_index":18,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SocialAccountsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SocialAccountsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":20,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SocialAccountsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["multiple",{"_index":516,"title":{},"body":{"index.html":{}}}],["music",{"_index":434,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["name",{"_index":83,"title":{},"body":{"injectables/AuthService.html":{},"classes/SelectChannelDto.html":{},"controllers/SocialAccountsController.html":{},"injectables/SocialAccountsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/SocialAccountsController.html":{},"modules/SocialAccountsModule.html":{},"injectables/SocialAccountsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":145,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetAllUsersParamDto.html":{},"classes/GetOneUserParamDto.html":{},"classes/LinkYoutubeDto.html":{},"classes/PatchUserDto.html":{},"classes/PatchUserPreferencesDTo.html":{},"classes/SelectChannelDto.html":{},"classes/UserPreferencesDto.html":{},"dependencies.html":{}}}],["new",{"_index":409,"title":{},"body":{"coverage.html":{}}}],["news",{"_index":433,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["niche",{"_index":197,"title":{},"body":{"classes/SelectChannelDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["niche.news",{"_index":223,"title":{},"body":{"classes/SelectChannelDto.html":{}}}],["number",{"_index":124,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetAllUsersParamDto.html":{},"classes/UserPreferencesDto.html":{}}}],["oauth",{"_index":177,"title":{},"body":{"classes/LinkYoutubeDto.html":{}}}],["offset",{"_index":153,"title":{},"body":{"classes/GetAllUsersParamDto.html":{},"injectables/UsersService.html":{}}}],["one",{"_index":122,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetOneUserParamDto.html":{},"classes/SelectChannelDto.html":{},"classes/UserPreferencesDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["optional",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/GetAllUsersParamDto.html":{},"controllers/SocialAccountsController.html":{},"injectables/SocialAccountsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["original",{"_index":497,"title":{},"body":{"index.html":{}}}],["out",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SocialAccountsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":533,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":506,"title":{},"body":{"index.html":{}}}],["package",{"_index":412,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":251,"title":{},"body":{"controllers/SocialAccountsController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SocialAccountsController.html":{},"injectables/SocialAccountsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["partialtype",{"_index":186,"title":{},"body":{"classes/PatchUserDto.html":{},"classes/PatchUserPreferencesDTo.html":{}}}],["partialtype(createuserdto",{"_index":185,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["partialtype(userpreferencesdto",{"_index":191,"title":{},"body":{"classes/PatchUserPreferencesDTo.html":{}}}],["password",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{}}}],["patch",{"_index":352,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id",{"_index":347,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch('preferences",{"_index":350,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser",{"_index":335,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["patchuser(getoneuserparamdto",{"_index":346,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["patchuserdto",{"_index":182,"title":{"classes/PatchUserDto.html":{}},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["patchuserpreferences",{"_index":336,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["patchuserpreferences(patchuserpreferencesdto",{"_index":349,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["patchuserpreferencesdto",{"_index":189,"title":{"classes/PatchUserPreferencesDTo.html":{}},"body":{"classes/PatchUserPreferencesDTo.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["per",{"_index":304,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["platform",{"_index":203,"title":{},"body":{"classes/SelectChannelDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["platforms",{"_index":491,"title":{},"body":{"index.html":{}}}],["post",{"_index":249,"title":{},"body":{"controllers/SocialAccountsController.html":{},"classes/UserPreferencesDto.html":{},"controllers/UsersController.html":{}}}],["post('youtube/link",{"_index":239,"title":{},"body":{"controllers/SocialAccountsController.html":{}}}],["post('youtube/save",{"_index":246,"title":{},"body":{"controllers/SocialAccountsController.html":{}}}],["powerful",{"_index":450,"title":{},"body":{"index.html":{}}}],["predefined",{"_index":214,"title":{},"body":{"classes/SelectChannelDto.html":{}}}],["preferences",{"_index":108,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["preferences.dto",{"_index":141,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserPreferencesDTo.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["preferences.dto.ts",{"_index":190,"title":{},"body":{"classes/PatchUserPreferencesDTo.html":{},"classes/UserPreferencesDto.html":{},"coverage.html":{}}}],["preferences.dto.ts:10",{"_index":306,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["preferences.dto.ts:14",{"_index":301,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["preferences.dto.ts:22",{"_index":316,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["prefix",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SocialAccountsController.html":{},"controllers/UsersController.html":{}}}],["presence",{"_index":515,"title":{},"body":{"index.html":{}}}],["private",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/SocialAccountsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["problem",{"_index":479,"title":{},"body":{"index.html":{}}}],["professional",{"_index":313,"title":{},"body":{"classes/UserPreferencesDto.html":{},"miscellaneous/enumerations.html":{}}}],["properties",{"_index":107,"title":{"properties.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/GetAllUsersParamDto.html":{},"classes/GetOneUserParamDto.html":{},"classes/LinkYoutubeDto.html":{},"classes/SelectChannelDto.html":{},"classes/UserPreferencesDto.html":{},"properties.html":{}}}],["provided",{"_index":202,"title":{},"body":{"classes/SelectChannelDto.html":{}}}],["providers",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SocialAccountsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers/auth.service",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["providers/social",{"_index":257,"title":{},"body":{"controllers/SocialAccountsController.html":{},"modules/SocialAccountsModule.html":{}}}],["providers/users.service",{"_index":358,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":76,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["publish",{"_index":521,"title":{},"body":{"index.html":{}}}],["publishes",{"_index":486,"title":{},"body":{"index.html":{}}}],["quality",{"_index":458,"title":{},"body":{"index.html":{}}}],["query",{"_index":353,"title":{},"body":{"controllers/UsersController.html":{}}}],["reach",{"_index":517,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/SocialAccountsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ready",{"_index":520,"title":{},"body":{"index.html":{}}}],["reellora",{"_index":476,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["relevant",{"_index":498,"title":{},"body":{"index.html":{}}}],["removeaccount",{"_index":231,"title":{},"body":{"controllers/SocialAccountsController.html":{},"injectables/SocialAccountsService.html":{}}}],["removeaccount(@param('id",{"_index":269,"title":{},"body":{"controllers/SocialAccountsController.html":{}}}],["removeaccount(id",{"_index":242,"title":{},"body":{"controllers/SocialAccountsController.html":{},"injectables/SocialAccountsService.html":{}}}],["removed",{"_index":291,"title":{},"body":{"injectables/SocialAccountsService.html":{}}}],["replies",{"_index":310,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["replytone",{"_index":295,"title":{},"body":{"classes/UserPreferencesDto.html":{},"miscellaneous/enumerations.html":{}}}],["replytone.professional",{"_index":325,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["req",{"_index":237,"title":{},"body":{"controllers/SocialAccountsController.html":{}}}],["req.user.id",{"_index":263,"title":{},"body":{"controllers/SocialAccountsController.html":{}}}],["request",{"_index":234,"title":{},"body":{"controllers/SocialAccountsController.html":{}}}],["reset",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SocialAccountsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":462,"title":{},"body":{"index.html":{}}}],["responses",{"_index":326,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["responses'})@isenum(replytone",{"_index":312,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["results",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/GetAllUsersParamDto.html":{},"classes/GetOneUserParamDto.html":{},"classes/LinkYoutubeDto.html":{},"classes/PatchUserDto.html":{},"classes/PatchUserPreferencesDTo.html":{},"classes/SelectChannelDto.html":{},"controllers/SocialAccountsController.html":{},"modules/SocialAccountsModule.html":{},"injectables/SocialAccountsService.html":{},"classes/UserPreferencesDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":54,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/SocialAccountsController.html":{},"injectables/SocialAccountsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returned",{"_index":178,"title":{},"body":{"classes/LinkYoutubeDto.html":{}}}],["returns",{"_index":52,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/SocialAccountsController.html":{},"injectables/SocialAccountsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rxjs",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":290,"title":{},"body":{"injectables/SocialAccountsService.html":{}}}],["saveyoutubechannel",{"_index":232,"title":{},"body":{"controllers/SocialAccountsController.html":{},"injectables/SocialAccountsService.html":{}}}],["saveyoutubechannel(@req",{"_index":267,"title":{},"body":{"controllers/SocialAccountsController.html":{}}}],["saveyoutubechannel(req",{"_index":245,"title":{},"body":{"controllers/SocialAccountsController.html":{}}}],["saveyoutubechannel(userid",{"_index":284,"title":{},"body":{"injectables/SocialAccountsService.html":{}}}],["selectchanneldto",{"_index":192,"title":{"classes/SelectChannelDto.html":{}},"body":{"classes/SelectChannelDto.html":{},"controllers/SocialAccountsController.html":{},"injectables/SocialAccountsService.html":{},"coverage.html":{}}}],["selected",{"_index":199,"title":{},"body":{"classes/SelectChannelDto.html":{}}}],["service",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"injectables/SocialAccountsService.html":{},"injectables/UsersService.html":{}}}],["skills",{"_index":461,"title":{},"body":{"index.html":{}}}],["small",{"_index":466,"title":{},"body":{"index.html":{}}}],["social",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"classes/SelectChannelDto.html":{},"controllers/SocialAccountsController.html":{},"modules/SocialAccountsModule.html":{},"injectables/SocialAccountsService.html":{},"index.html":{}}}],["socialaccountscontroller",{"_index":225,"title":{"controllers/SocialAccountsController.html":{}},"body":{"controllers/SocialAccountsController.html":{},"modules/SocialAccountsModule.html":{},"coverage.html":{}}}],["socialaccountsmodule",{"_index":31,"title":{"modules/SocialAccountsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SocialAccountsModule.html":{},"modules.html":{},"overview.html":{}}}],["socialaccountsservice",{"_index":256,"title":{"injectables/SocialAccountsService.html":{}},"body":{"controllers/SocialAccountsController.html":{},"modules/SocialAccountsModule.html":{},"injectables/SocialAccountsService.html":{},"coverage.html":{},"overview.html":{}}}],["solo",{"_index":502,"title":{},"body":{"index.html":{}}}],["solve",{"_index":478,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/GetAllUsersParamDto.html":{},"classes/GetOneUserParamDto.html":{},"classes/LinkYoutubeDto.html":{},"classes/PatchUserDto.html":{},"classes/PatchUserPreferencesDTo.html":{},"classes/SelectChannelDto.html":{},"controllers/SocialAccountsController.html":{},"modules/SocialAccountsModule.html":{},"injectables/SocialAccountsService.html":{},"classes/UserPreferencesDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sources",{"_index":483,"title":{},"body":{"index.html":{}}}],["sourcing",{"_index":454,"title":{},"body":{"index.html":{}}}],["special",{"_index":125,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["sports",{"_index":435,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":444,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../niche.enums.ts",{"_index":429,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../plateform.enums.ts",{"_index":430,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../replytone.enums.ts",{"_index":431,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":46,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":51,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.module",{"_index":376,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/auth/auth.module.ts",{"_index":71,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/providers/auth.service",{"_index":388,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/auth/providers/auth.service.ts",{"_index":75,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts:14",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:20",{"_index":86,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:5",{"_index":81,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/main.ts",{"_index":403,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/social",{"_index":173,"title":{},"body":{"classes/LinkYoutubeDto.html":{},"classes/SelectChannelDto.html":{},"controllers/SocialAccountsController.html":{},"modules/SocialAccountsModule.html":{},"injectables/SocialAccountsService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/users/dtos/create",{"_index":105,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/get",{"_index":150,"title":{},"body":{"classes/GetAllUsersParamDto.html":{},"classes/GetOneUserParamDto.html":{},"coverage.html":{}}}],["src/users/dtos/patch",{"_index":183,"title":{},"body":{"classes/PatchUserDto.html":{},"classes/PatchUserPreferencesDTo.html":{},"coverage.html":{}}}],["src/users/dtos/user",{"_index":292,"title":{},"body":{"classes/UserPreferencesDto.html":{},"coverage.html":{}}}],["src/users/enums/replytone.enums.ts",{"_index":442,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/users/providers/users.service",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/providers/users.service.ts",{"_index":377,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/providers/users.service.ts:10",{"_index":380,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:19",{"_index":384,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:25",{"_index":385,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:30",{"_index":382,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:36",{"_index":386,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:42",{"_index":387,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:49",{"_index":383,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.controller.ts",{"_index":329,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:21",{"_index":342,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:26",{"_index":345,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:31",{"_index":338,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:36",{"_index":351,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:43",{"_index":348,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:51",{"_index":340,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":74,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":374,"title":{},"body":{"modules/UsersModule.html":{}}}],["started",{"_index":446,"title":{"index.html":{}},"body":{}}],["starting",{"_index":489,"title":{},"body":{"index.html":{}}}],["statements",{"_index":398,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":53,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/GetOneUserParamDto.html":{},"classes/LinkYoutubeDto.html":{},"classes/SelectChannelDto.html":{},"controllers/SocialAccountsController.html":{},"injectables/SocialAccountsService.html":{}}}],["struggle",{"_index":471,"title":{},"body":{"index.html":{}}}],["successfully",{"_index":393,"title":{},"body":{"injectables/UsersService.html":{}}}],["support",{"_index":530,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":531,"title":{},"body":{"modules.html":{}}}],["table",{"_index":411,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":410,"title":{},"body":{"coverage.html":{}}}],["tailored",{"_index":500,"title":{},"body":{"index.html":{}}}],["takes",{"_index":459,"title":{},"body":{"index.html":{}}}],["tech",{"_index":208,"title":{},"body":{"classes/SelectChannelDto.html":{}}}],["this.authservice.isauth",{"_index":389,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.socialaccountsservice.getaccounts('authenticateduserid",{"_index":264,"title":{},"body":{"controllers/SocialAccountsController.html":{}}}],["this.socialaccountsservice.linkyoutube(linkyoutubedto",{"_index":266,"title":{},"body":{"controllers/SocialAccountsController.html":{}}}],["this.socialaccountsservice.removeaccount(id",{"_index":270,"title":{},"body":{"controllers/SocialAccountsController.html":{}}}],["this.socialaccountsservice.saveyoutubechannel('authenticateduserid",{"_index":268,"title":{},"body":{"controllers/SocialAccountsController.html":{}}}],["this.usersservice.ceateuser(createuserdto",{"_index":366,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.deleteuser(getoneuserparamdto",{"_index":370,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findallusers(getallusersparamdto",{"_index":362,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findoneuser(getoneuserparamdto",{"_index":364,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.patchuser(getoneuserparamdto",{"_index":368,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.patchuserpreferences(patchuserpreferencesdto",{"_index":367,"title":{},"body":{"controllers/UsersController.html":{}}}],["tiktok",{"_index":441,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["time",{"_index":460,"title":{},"body":{"index.html":{}}}],["today’s",{"_index":447,"title":{},"body":{"index.html":{}}}],["token",{"_index":101,"title":{},"body":{"injectables/AuthService.html":{}}}],["tone",{"_index":309,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["tool",{"_index":481,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":142,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetAllUsersParamDto.html":{},"dependencies.html":{}}}],["true",{"_index":298,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["turning",{"_index":526,"title":{},"body":{"index.html":{}}}],["type",{"_index":84,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/GetAllUsersParamDto.html":{},"classes/GetOneUserParamDto.html":{},"classes/LinkYoutubeDto.html":{},"classes/SelectChannelDto.html":{},"controllers/SocialAccountsController.html":{},"injectables/SocialAccountsService.html":{},"classes/UserPreferencesDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["uc_x5xg1ov2p6uzz5fsm9ttw",{"_index":222,"title":{},"body":{"classes/SelectChannelDto.html":{}}}],["uc_x5xg1ov2p6uzz5fsm9ttw'})@isstring()@isnotempty",{"_index":205,"title":{},"body":{"classes/SelectChannelDto.html":{}}}],["undefined",{"_index":308,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["undefined})@isenum(niche",{"_index":217,"title":{},"body":{"classes/SelectChannelDto.html":{}}}],["unique",{"_index":198,"title":{},"body":{"classes/SelectChannelDto.html":{}}}],["unknown",{"_index":241,"title":{},"body":{"controllers/SocialAccountsController.html":{},"injectables/SocialAccountsService.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":538,"title":{},"body":{"properties.html":{}}}],["up",{"_index":473,"title":{},"body":{"index.html":{}}}],["updated",{"_index":392,"title":{},"body":{"injectables/UsersService.html":{}}}],["updates",{"_index":394,"title":{},"body":{"injectables/UsersService.html":{}}}],["uploads",{"_index":303,"title":{},"body":{"classes/UserPreferencesDto.html":{}}}],["user",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/PatchUserPreferencesDTo.html":{},"controllers/SocialAccountsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user's",{"_index":286,"title":{},"body":{"injectables/SocialAccountsService.html":{}}}],["user.dto",{"_index":188,"title":{},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":106,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetOneUserParamDto.html":{},"classes/PatchUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":112,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:16",{"_index":132,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:25",{"_index":127,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:31",{"_index":130,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:9",{"_index":168,"title":{},"body":{"classes/GetOneUserParamDto.html":{}}}],["userid",{"_index":281,"title":{},"body":{"injectables/SocialAccountsService.html":{}}}],["username",{"_index":109,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["userpreferencesdto",{"_index":128,"title":{"classes/UserPreferencesDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserPreferencesDTo.html":{},"classes/UserPreferencesDto.html":{},"coverage.html":{}}}],["users",{"_index":330,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":375,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.dto",{"_index":356,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.dto.ts",{"_index":151,"title":{},"body":{"classes/GetAllUsersParamDto.html":{},"coverage.html":{}}}],["users.dto.ts:11",{"_index":160,"title":{},"body":{"classes/GetAllUsersParamDto.html":{}}}],["users.dto.ts:18",{"_index":158,"title":{},"body":{"classes/GetAllUsersParamDto.html":{}}}],["users/users.module",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":328,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":32,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":80,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["uuid",{"_index":166,"title":{},"body":{"classes/GetOneUserParamDto.html":{}}}],["valid",{"_index":218,"title":{},"body":{"classes/SelectChannelDto.html":{}}}],["validatenested",{"_index":139,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["validator",{"_index":140,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetAllUsersParamDto.html":{},"classes/GetOneUserParamDto.html":{},"classes/LinkYoutubeDto.html":{},"classes/SelectChannelDto.html":{},"classes/UserPreferencesDto.html":{},"dependencies.html":{}}}],["value",{"_index":155,"title":{},"body":{"classes/GetAllUsersParamDto.html":{},"classes/SelectChannelDto.html":{},"miscellaneous/enumerations.html":{}}}],["values",{"_index":216,"title":{},"body":{"classes/SelectChannelDto.html":{}}}],["version",{"_index":535,"title":{},"body":{"properties.html":{}}}],["video",{"_index":449,"title":{},"body":{"index.html":{}}}],["videos",{"_index":499,"title":{},"body":{"index.html":{}}}],["void",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{}}}],["way",{"_index":451,"title":{},"body":{"index.html":{}}}],["whether",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserPreferencesDto.html":{},"index.html":{}}}],["wider",{"_index":518,"title":{},"body":{"index.html":{}}}],["witty",{"_index":314,"title":{},"body":{"classes/UserPreferencesDto.html":{},"miscellaneous/enumerations.html":{}}}],["world",{"_index":56,"title":{},"body":{"injectables/AppService.html":{},"classes/SelectChannelDto.html":{},"index.html":{}}}],["world'})@isstring()@isnotempty",{"_index":209,"title":{},"body":{"classes/SelectChannelDto.html":{}}}],["youtube",{"_index":288,"title":{},"body":{"injectables/SocialAccountsService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["youtube.dto",{"_index":253,"title":{},"body":{"controllers/SocialAccountsController.html":{},"injectables/SocialAccountsService.html":{}}}],["youtube.dto.ts",{"_index":175,"title":{},"body":{"classes/LinkYoutubeDto.html":{},"coverage.html":{}}}],["youtube.dto.ts:7",{"_index":180,"title":{},"body":{"classes/LinkYoutubeDto.html":{}}}],["you’re",{"_index":501,"title":{},"body":{"index.html":{}}}],["z\\d",{"_index":116,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*?&#])[a",{"_index":115,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["za",{"_index":114,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SocialAccountsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nSocialAccountsModule\n\nSocialAccountsModule\n\nAppModule -->\n\nSocialAccountsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            SocialAccountsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { SocialAccountsModule } from './social-accounts/social-accounts.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [UsersModule, SocialAccountsModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AuthService } from './providers/auth.service';\n\n@Controller('auth')\nexport class AuthController {\n    constructor(\n        /**\n         * Injecting Auth Service\n         */\n        private readonly authService: AuthService\n    ) { }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './providers/auth.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService],\n  imports: [forwardRef(() => UsersModule)],\n  exports: [AuthService]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuth\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/auth.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    isAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, password: string, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        /**\n         * Injecting usersService\n         */\n        @Inject(forwardRef(() => UsersService))\n        private readonly usersService: UsersService\n    ) { }\n\n    public login(email: string, password: string, id: string) {\n        // Check whether user exist in database\n        // login\n        // token\n    }\n\n    public isAuth() {\n        return console.log(true)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                preferences\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@MinLength(8)@IsNotEmpty()@Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*?&#])[A-Za-z\\d@$!%*?&#]+$/, {message: 'Password must be at least 8 characters long, contain at least one letter, one number, and one special character'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        preferences\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserPreferencesDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@MinLength(3)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, IsString, Matches, MinLength, ValidateNested } from \"class-validator\";\nimport { UserPreferencesDto } from \"./user-preferences.dto\";\nimport { Type } from \"class-transformer\";\nimport { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\n\nexport class CreateUserDto {\n    @ApiProperty()\n    @IsEmail()\n    @IsNotEmpty()\n    email: string;\n\n    @ApiProperty()\n    @IsString()\n    @MinLength(3)\n    @IsNotEmpty()\n    userName: string;\n\n    @ApiProperty()\n    @IsString()\n    @MinLength(8)\n    @IsNotEmpty()\n    @Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*?&#])[A-Za-z\\d@$!%*?&#]+$/, {\n        message: 'Password must be at least 8 characters long, contain at least one letter, one number, and one special character',\n    })\n    password: string;\n\n    @ApiPropertyOptional()\n    @IsOptional()\n    @ValidateNested()\n    @Type(() => UserPreferencesDto)\n    preferences?: UserPreferencesDto\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetAllUsersParamDto.html":{"url":"classes/GetAllUsersParamDto.html","title":"class - GetAllUsersParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetAllUsersParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/get-users.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                offset\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@Type(undefined)@IsInt()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/get-users.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        offset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@Type(undefined)@IsInt()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/get-users.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { Type } from \"class-transformer\";\nimport { IsInt, IsOptional, Min, } from \"class-validator\";\n\nexport class GetAllUsersParamDto {\n    @ApiPropertyOptional()\n    @IsOptional()\n    @Type(() => Number)\n    @IsInt()\n    @Min(1)\n    offset?: number = 1\n\n    @ApiPropertyOptional()\n    @IsOptional()\n    @Type(() => Number)\n    @IsInt()\n    @Min(1)\n    limit?: number = 20;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetOneUserParamDto.html":{"url":"classes/GetOneUserParamDto.html","title":"class - GetOneUserParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetOneUserParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/get-one-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'UUID string identifier'})@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/get-one-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsUUID } from \"class-validator\";\n\nexport class GetOneUserParamDto {\n    @ApiProperty({\n        description: 'UUID string identifier'\n    })\n    @IsUUID()\n    id: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LinkYoutubeDto.html":{"url":"classes/LinkYoutubeDto.html","title":"class - LinkYoutubeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LinkYoutubeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-accounts/dtos/link-youtube.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'OAuth code returned from Google'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/social-accounts/dtos/link-youtube.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString } from \"class-validator\";\n\nexport class LinkYoutubeDto {\n    @ApiProperty({ description: 'OAuth code returned from Google' })\n    @IsString()\n    code: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserDto.html":{"url":"classes/PatchUserDto.html","title":"class - PatchUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/patch-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\"\nimport { CreateUserDto } from \"./create-user.dto\"\n\nexport class PatchUserDto extends PartialType(CreateUserDto) { }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserPreferencesDTo.html":{"url":"classes/PatchUserPreferencesDTo.html","title":"class - PatchUserPreferencesDTo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserPreferencesDTo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/patch-user-preferences.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(UserPreferencesDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { UserPreferencesDto } from \"./user-preferences.dto\";\n\nexport class PatchUserPreferencesDTo extends PartialType(UserPreferencesDto) { }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectChannelDto.html":{"url":"classes/SelectChannelDto.html","title":"class - SelectChannelDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectChannelDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-accounts/dtos/select-channel.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                channelId\n                            \n                            \n                                    \n                                    \n                                    \n                                channelName\n                            \n                            \n                                    \n                                    \n                                niche\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        channelId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The unique identifier of the selected social media channel (provided by the platform).', example: 'UC_x5XG1OV2P6uZZ5FSM9Ttw'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/social-accounts/dtos/select-channel.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        channelName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The display name of the selected social media channel.', example: 'Tech World'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/social-accounts/dtos/select-channel.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        niche\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Niche\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The niche or category this channel belongs to. Must match one of the predefined niche enum values.', enum: Niche, example: undefined})@IsEnum(Niche, {message: 'Niche must be a valid value from the Niche enum.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/social-accounts/dtos/select-channel.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsNotEmpty, IsString } from \"class-validator\"\nimport { Niche } from \"../enums/niche.enums\"\nimport { ApiProperty } from \"@nestjs/swagger\";\n\nexport class SelectChannelDto {\n    @ApiProperty({\n        description: \"The unique identifier of the selected social media channel (provided by the platform).\",\n        example: \"UC_x5XG1OV2P6uZZ5FSM9Ttw\"\n    })\n    @IsString()\n    @IsNotEmpty()\n    channelId: string;\n\n    @ApiProperty({\n        description: \"The display name of the selected social media channel.\",\n        example: \"Tech World\"\n    })\n    @IsString()\n    @IsNotEmpty()\n    channelName: string;\n\n    @ApiProperty({\n        description: \"The niche or category this channel belongs to. Must match one of the predefined niche enum values.\",\n        enum: Niche,\n        example: Niche.NEWS\n    })\n    @IsEnum(Niche, { message: 'Niche must be a valid value from the Niche enum.' })\n    niche: Niche;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SocialAccountsController.html":{"url":"controllers/SocialAccountsController.html","title":"controller - SocialAccountsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SocialAccountsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-accounts/social-accounts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                social-accounts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getMyAccounts\n                            \n                            \n                                    \n                                    Async\n                                linkYoutube\n                            \n                            \n                                    \n                                removeAccount\n                            \n                            \n                                    \n                                    Async\n                                saveYoutubeChannel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getMyAccounts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMyAccounts(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('my')\n                \n            \n\n                    \n                        \n                            Defined in src/social-accounts/social-accounts.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        linkYoutube\n                        \n                    \n                \n            \n            \n                \n                        \n                    linkYoutube(linkYoutubeDto: LinkYoutubeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('youtube/link')\n                \n            \n\n                    \n                        \n                            Defined in src/social-accounts/social-accounts.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                linkYoutubeDto\n                                            \n                                                            LinkYoutubeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        removeAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeAccount(id: string, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/social-accounts/social-accounts.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        saveYoutubeChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveYoutubeChannel(req: Request, selectChannelDto: SelectChannelDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('youtube/save')\n                \n            \n\n                    \n                        \n                            Defined in src/social-accounts/social-accounts.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                selectChannelDto\n                                            \n                                                            SelectChannelDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, Req, Delete, Param, Request } from '@nestjs/common';\nimport { LinkYoutubeDto } from './dtos/link-youtube.dto';\nimport { SelectChannelDto } from './dtos/select-channel.dto';\nimport { SocialAccountsService } from './providers/social-accounts.service';\n\n@Controller('social-accounts')\nexport class SocialAccountsController {\n    constructor(\n        /**\n         * injecting SocialAccountsService\n         */\n        private readonly socialAccountsService: SocialAccountsService\n\n    ) { }\n    @Get('my')\n    getMyAccounts(@Req() req: Request) {\n        /**\n         * get authenticated user id form req.user.id\n         */\n        return this.socialAccountsService.getAccounts('authenticatedUserId');\n    }\n\n    @Post('youtube/link')\n    async linkYoutube(@Body() linkYoutubeDto: LinkYoutubeDto) {\n        return this.socialAccountsService.linkYoutube(linkYoutubeDto);\n    }\n\n    @Post('youtube/save')\n    async saveYoutubeChannel(@Req() req: Request, @Body() selectChannelDto: SelectChannelDto,) {\n        return this.socialAccountsService.saveYoutubeChannel('authenticatedUserId', selectChannelDto);\n    }\n\n    @Delete(':id')\n    removeAccount(@Param('id') id: string, @Req() req: Request) {\n        return this.socialAccountsService.removeAccount(id, 'authenticatedUserId');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SocialAccountsModule.html":{"url":"modules/SocialAccountsModule.html","title":"module - SocialAccountsModule","body":"\n                   \n\n\n\n\n    Modules\n    SocialAccountsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SocialAccountsModule\n\n\n\ncluster_SocialAccountsModule_providers\n\n\n\n\nSocialAccountsService\n\nSocialAccountsService\n\n\n\nSocialAccountsModule\n\nSocialAccountsModule\n\nSocialAccountsModule -->\n\nSocialAccountsService->SocialAccountsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/social-accounts/social-accounts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SocialAccountsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SocialAccountsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SocialAccountsController } from './social-accounts.controller';\nimport { SocialAccountsService } from './providers/social-accounts.service';\n\n@Module({\n  controllers: [SocialAccountsController],\n  providers: [SocialAccountsService]\n})\nexport class SocialAccountsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SocialAccountsService.html":{"url":"injectables/SocialAccountsService.html","title":"injectable - SocialAccountsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SocialAccountsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-accounts/providers/social-accounts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAccounts\n                            \n                            \n                                    Async\n                                linkYoutube\n                            \n                            \n                                    Async\n                                removeAccount\n                            \n                            \n                                    Async\n                                saveYoutubeChannel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAccounts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAccounts(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/social-accounts/providers/social-accounts.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        linkYoutube\n                        \n                    \n                \n            \n            \n                \n                        \n                    linkYoutube(linkYoutubeDto: LinkYoutubeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/social-accounts/providers/social-accounts.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                linkYoutubeDto\n                                            \n                                                            LinkYoutubeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeAccount(id: string, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/social-accounts/providers/social-accounts.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        saveYoutubeChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveYoutubeChannel(userId: string, selectChannelDto: SelectChannelDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/social-accounts/providers/social-accounts.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                selectChannelDto\n                                            \n                                                            SelectChannelDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { LinkYoutubeDto } from '../dtos/link-youtube.dto';\nimport { SelectChannelDto } from '../dtos/select-channel.dto';\n\n@Injectable()\nexport class SocialAccountsService {\n\n    async getAccounts(userId: string) {\n        return \"Get all user's social accounts\"\n    }\n\n    async linkYoutube(linkYoutubeDto: LinkYoutubeDto) {\n        return {\n            message: 'service to link a youtube account',\n            linkYoutubeDto\n        };\n    }\n\n    async saveYoutubeChannel(userId: string, selectChannelDto: SelectChannelDto) {\n        return {\n            message: 'Service to save channel',\n            selectChannelDto\n        }\n    }\n\n    async removeAccount(id: string, userId: string) {\n        return `account removed with id ${id}`;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserPreferencesDto.html":{"url":"classes/UserPreferencesDto.html","title":"class - UserPreferencesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserPreferencesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/user-preferences.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                autoPost\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                frequencyOfUpload\n                            \n                            \n                                    \n                                    \n                                replyTone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        autoPost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: true, description: 'Whether to auto-post content'})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user-preferences.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        frequencyOfUpload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 3, description: 'Number of uploads per day'})@IsNumber()@Min(0)@Max(3)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user-preferences.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        replyTone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReplyTone\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: ReplyTone, example: undefined, description: 'Tone for replies in generated responses'})@IsEnum(ReplyTone, {message: 'replyTone must be one of: PROFESSIONAL, WITTY, HUMOROUS'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/user-preferences.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, Min, Max, IsBoolean, IsEnum } from \"class-validator\";\nimport { ReplyTone } from \"../enums/replyTone.enums\";\nimport { ApiPropertyOptional } from \"@nestjs/swagger\";\n\nexport class UserPreferencesDto {\n    @ApiPropertyOptional({ example: 3, description: 'Number of uploads per day' })\n    @IsNumber()\n    @Min(0)\n    @Max(3)\n    frequencyOfUpload: number;\n\n    @ApiPropertyOptional({ example: true, description: 'Whether to auto-post content' })\n    @IsBoolean()\n    autoPost: boolean;\n\n    @ApiPropertyOptional({\n        enum: ReplyTone,\n        example: ReplyTone.PROFESSIONAL,\n        description: 'Tone for replies in generated responses',\n    })\n    @IsEnum(ReplyTone, { message: 'replyTone must be one of: PROFESSIONAL, WITTY, HUMOROUS' })\n    replyTone: ReplyTone;\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createUser\n                            \n                            \n                                    \n                                    Public\n                                deleteUser\n                            \n                            \n                                    \n                                    Public\n                                findAllUsers\n                            \n                            \n                                    \n                                    Public\n                                findOneUser\n                            \n                            \n                                    \n                                    Public\n                                patchUser\n                            \n                            \n                                    \n                                    Public\n                                patchUserPreferences\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(getOneUserParamDto: GetOneUserParamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getOneUserParamDto\n                                            \n                                                            GetOneUserParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        findAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllUsers(getAllUsersParamDto: GetAllUsersParamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getAllUsersParamDto\n                                            \n                                                            GetAllUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        findOneUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneUser(getOneUserParamDto: GetOneUserParamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getOneUserParamDto\n                                            \n                                                            GetOneUserParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        patchUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchUser(getOneUserParamDto: GetOneUserParamDto, patchUserDto: PatchUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getOneUserParamDto\n                                            \n                                                            GetOneUserParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        patchUserPreferences\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchUserPreferences(patchUserPreferencesDto: PatchUserPreferencesDTo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('preferences')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchUserPreferencesDto\n                                            \n                                                            PatchUserPreferencesDTo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post, Query, } from '@nestjs/common';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { GetAllUsersParamDto } from './dtos/get-users.dto';\nimport { GetOneUserParamDto } from './dtos/get-one-user.dto';\nimport { PatchUserDto } from './dtos/patch-user.dto';\nimport { UsersService } from './providers/users.service';\nimport { PatchUserPreferencesDTo } from './dtos/patch-user-preferences.dto';\n\n@Controller('users')\nexport class UsersController {\n\n    constructor(\n        /**\n         * injecting usersService as a dependency\n         */\n        private readonly usersService: UsersService\n\n    ) { }\n\n    @Get()\n    public findAllUsers(@Query() getAllUsersParamDto: GetAllUsersParamDto) {\n        return this.usersService.findAllUsers(getAllUsersParamDto)\n    }\n\n    @Get(':id')\n    public findOneUser(@Param() getOneUserParamDto: GetOneUserParamDto) {\n        return this.usersService.findOneUser(getOneUserParamDto)\n    }\n\n    @Post()\n    public createUser(@Body() createUserDto: CreateUserDto) {\n        return this.usersService.ceateUser(createUserDto)\n    }\n\n    @Patch('preferences')\n    public patchUserPreferences(\n        @Body() patchUserPreferencesDto: PatchUserPreferencesDTo\n    ) {\n        return this.usersService.patchUserPreferences(patchUserPreferencesDto)\n    }\n\n    @Patch(':id')\n    public patchUser(\n        @Param() getOneUserParamDto: GetOneUserParamDto,\n        @Body() patchUserDto: PatchUserDto\n    ) {\n        return this.usersService.patchUser(getOneUserParamDto, patchUserDto)\n    }\n\n    @Delete(':id')\n    public deleteUser(@Param() getOneUserParamDto: GetOneUserParamDto) {\n        return this.usersService.deleteUser(getOneUserParamDto)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './providers/users.service';\nimport { AuthModule } from 'src/auth/auth.module';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n  imports: [forwardRef(() => AuthModule)],\n\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                ceateUser\n                            \n                            \n                                    Public\n                                    Async\n                                deleteUser\n                            \n                            \n                                    Public\n                                    Async\n                                findAllUsers\n                            \n                            \n                                    Public\n                                    Async\n                                findOneUser\n                            \n                            \n                                    Public\n                                    Async\n                                patchUser\n                            \n                            \n                                    Public\n                                    Async\n                                patchUserPreferences\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/users.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        ceateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    ceateUser(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(getOneUserParamDto: GetOneUserParamDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getOneUserParamDto\n                                            \n                                                            GetOneUserParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllUsers(getAllUsersParamDto: GetAllUsersParamDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getAllUsersParamDto\n                                            \n                                                            GetAllUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneUser(getOneUserParamDto: GetOneUserParamDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getOneUserParamDto\n                                            \n                                                            GetOneUserParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        patchUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchUser(getOneUserParamDto: GetOneUserParamDto, patchUserDto: PatchUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getOneUserParamDto\n                                            \n                                                            GetOneUserParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        patchUserPreferences\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchUserPreferences(patchUserPreferencesDto: PatchUserPreferencesDTo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchUserPreferencesDto\n                                            \n                                                            PatchUserPreferencesDTo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { GetAllUsersParamDto } from '../dtos/get-users.dto';\nimport { GetOneUserParamDto } from '../dtos/get-one-user.dto';\nimport { CreateUserDto } from '../dtos/create-user.dto';\nimport { PatchUserDto } from '../dtos/patch-user.dto';\nimport { AuthService } from 'src/auth/providers/auth.service';\nimport { PatchUserPreferencesDTo } from '../dtos/patch-user-preferences.dto';\n\n@Injectable()\nexport class UsersService {\n    constructor(\n        /**\n         * Injecting Auth Service \n         */\n        @Inject(forwardRef(() => AuthService))\n        private readonly authService: AuthService\n    ) { }\n\n    public async findAllUsers(getAllUsersParamDto: GetAllUsersParamDto) {\n        this.authService.isAuth()\n        const { offset, limit } = getAllUsersParamDto\n        return { offset, limit }\n    }\n\n    public async findOneUser(getOneUserParamDto: GetOneUserParamDto) {\n        const { id } = getOneUserParamDto\n        return { message: `user with ID ${id}` }\n    }\n\n    public async ceateUser(createUserDto: CreateUserDto) {\n        return {\n            body: createUserDto\n        }\n    }\n\n    public async patchUser(getOneUserParamDto: GetOneUserParamDto, patchUserDto: PatchUserDto) {\n        return {\n            message: `User ${getOneUserParamDto.id} updated successfully`,\n            updates: patchUserDto,\n        }\n    }\n    public async patchUserPreferences(patchUserPreferencesDto: PatchUserPreferencesDTo) {\n        return {\n            message: 'User preferences updated successfully',\n            updates: patchUserPreferencesDto,\n        }\n    }\n\n    public async deleteUser(getOneUserParamDto: GetOneUserParamDto) {\n        return `user with ${getOneUserParamDto.id} deleted`\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/providers/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-accounts/dtos/link-youtube.dto.ts\n            \n            class\n            LinkYoutubeDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/social-accounts/dtos/select-channel.dto.ts\n            \n            class\n            SelectChannelDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/social-accounts/providers/social-accounts.service.ts\n            \n            injectable\n            SocialAccountsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/social-accounts/social-accounts.controller.ts\n            \n            controller\n            SocialAccountsController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dtos/get-one-user.dto.ts\n            \n            class\n            GetOneUserParamDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dtos/get-users.dto.ts\n            \n            class\n            GetAllUsersParamDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dtos/patch-user-preferences.dto.ts\n            \n            class\n            PatchUserPreferencesDTo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dtos/patch-user.dto.ts\n            \n            class\n            PatchUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dtos/user-preferences.dto.ts\n            \n            class\n            UserPreferencesDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/providers/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.26\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/swagger : ^11.2.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.2\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Niche   (src/.../niche.enums.ts)\n                        \n                        \n                            Platform   (src/.../plateform.enums.ts)\n                        \n                        \n                            ReplyTone   (src/.../replyTone.enums.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/social-accounts/enums/niche.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        Niche\n                    \n                \n                        \n                            \n                                 NEWS\n                            \n                        \n                        \n                            \n                                Value : news\n                            \n                        \n                        \n                            \n                                 MUSIC\n                            \n                        \n                        \n                            \n                                Value : music\n                            \n                        \n                        \n                            \n                                 SPORTS\n                            \n                        \n                        \n                            \n                                Value : sports\n                            \n                        \n                        \n                            \n                                 LIFESTYLE\n                            \n                        \n                        \n                            \n                                Value : lifestyle\n                            \n                        \n                        \n                            \n                                 GAMING\n                            \n                        \n                        \n                            \n                                Value : gaming\n                            \n                        \n                        \n                            \n                                 EDUCATION\n                            \n                        \n                        \n                            \n                                Value : education\n                            \n                        \n            \n        \n\n    src/social-accounts/enums/plateform.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        Platform\n                    \n                \n                        \n                            \n                                 YOUTUBE\n                            \n                        \n                        \n                            \n                                Value : youtube\n                            \n                        \n                        \n                            \n                                 FACEBOOK\n                            \n                        \n                        \n                            \n                                Value : facebook\n                            \n                        \n                        \n                            \n                                 TIKTOK\n                            \n                        \n                        \n                            \n                                Value : tiktok\n                            \n                        \n            \n        \n\n    src/users/enums/replyTone.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        ReplyTone\n                    \n                \n                        \n                            \n                                 PROFESSIONAL\n                            \n                        \n                        \n                            \n                                Value : PROFESSIONAL\n                            \n                        \n                        \n                            \n                                 WITTY\n                            \n                        \n                        \n                            \n                                Value : WITTY\n                            \n                        \n                        \n                            \n                                 HUMOROUS\n                            \n                        \n                        \n                            \n                                Value : HUMOROUS\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nIn today’s digital world, video is the most powerful way to grow an audience but sourcing and creating consistent, high-quality content takes time, skills, and resources that not everyone has. Many content creators, small businesses, and even established brands struggle to keep up with the demand for engaging video.\nReellora was built to solve that problem.\nReellora is a cross-platform tool that automatically sources, curates, and generates high-quality video content, then publishes it across major social media channels. Starting with YouTube and expanding to platforms like Facebook, Instagram, and beyond, Reellora makes it effortless to deliver original, relevant, and engaging videos tailored to your niche.\nWhether you’re a solo creator, entrepreneur, or business owner, Reellora helps you:\nDiscover and source high-quality video material.\nCurate and generate content that fits your brand.\nMaintain a consistent presence across multiple platforms.\nReach wider audiences with engaging, ready-to-publish videos.\nWith Reellora, video content becomes effortless, so you can focus on growing your brand, connecting with your audience, and turning attention into impact.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SocialAccountsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_SocialAccountsModule\n\n\n\ncluster_SocialAccountsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nSocialAccountsModule\n\nSocialAccountsModule\n\nAppModule -->\n\nSocialAccountsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nSocialAccountsService\n\nSocialAccountsService\n\nSocialAccountsModule -->\n\nSocialAccountsService->SocialAccountsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
